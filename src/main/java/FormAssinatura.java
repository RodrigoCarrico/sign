import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.security.KeyStore;


public class FormAssinatura {
    public JPanel panel1;
    private JTextField textCertificado;
    private JButton btnCertificado;
    private JTextField textSenha;
    private JTextField textPDF;
    private JButton btnPDF;
    private JButton btnAssinar;
    private JTextField textName;
    private JTextField textLocation;
    private JTextField textReason;

    public FormAssinatura() {
        btnCertificado.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                escolhe("certificado");
            }
        });
        btnPDF.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                escolhe("pdf");
            }
        });
        btnAssinar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                sign();
            }
        });
    }


    private void escolhe(String button) {
        try {
            JFileChooser chooser = new JFileChooser();
            int retorno = chooser.showOpenDialog(null);

            if (retorno == JFileChooser.APPROVE_OPTION) {
                if (button.equals("certificado")) {
                    textCertificado.setText(chooser.getSelectedFile().getCanonicalPath());
                } else {
                    textPDF.setText(chooser.getSelectedFile().getCanonicalPath());

                }


            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void sign() {
        try {
            KeyStore keystore = KeyStore.getInstance("PKCS12");
            char[] password = textSenha.getText().toCharArray();
            keystore.load(new FileInputStream(textCertificado.getText()), password);

            // sign PDF
            CreateSignature signing = new CreateSignature(keystore, password);
            signing.setExternalSigning(true);

            File inFile = new File(textPDF.getText());
            String name = inFile.getName();
            String substring = name.substring(0, name.lastIndexOf('.'));

            File outFile = new File(inFile.getParent(), substring + "_assinado.pdf");
            signing.signDetached(inFile, outFile, null, textName.getText(), textLocation.getText(), textReason.getText());
            textPDF.setText("");
            JOptionPane.showMessageDialog(null, "Assinatura gerada com sucesso!!!!", "Erro de validação", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage(), "Erro de validação", JOptionPane.ERROR_MESSAGE);
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        panel1.setAlignmentX(1.0f);
        panel1.setAlignmentY(1.0f);
        panel1.setAutoscrolls(true);
        panel1.setPreferredSize(new Dimension(540, 400));
        panel1.setRequestFocusEnabled(false);
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Assinatura", TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION));
        final JLabel label1 = new JLabel();
        label1.setHorizontalTextPosition(10);
        label1.setText("Certificado:");
        CellConstraints cc = new CellConstraints();
        panel1.add(label1, cc.xyw(1, 1, 3));
        textCertificado = new JTextField();
        textCertificado.setDropMode(DropMode.USE_SELECTION);
        textCertificado.setEditable(true);
        textCertificado.setHorizontalAlignment(2);
        textCertificado.setMinimumSize(new Dimension(100, 30));
        textCertificado.setPreferredSize(new Dimension(300, 30));
        textCertificado.setText("");
        textCertificado.putClientProperty("caretAspectRatio", new Double(0.0));
        textCertificado.putClientProperty("caretWidth", new Integer(0));
        textCertificado.putClientProperty("html.disable", Boolean.FALSE);
        panel1.add(textCertificado, cc.xy(1, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        btnCertificado = new JButton();
        btnCertificado.setLabel("Procurar");
        btnCertificado.setText("Procurar");
        panel1.add(btnCertificado, cc.xy(3, 3));
        final JLabel label2 = new JLabel();
        label2.setText("Senha:");
        panel1.add(label2, cc.xy(1, 5));
        textSenha = new JTextField();
        textSenha.setPreferredSize(new Dimension(300, 30));
        panel1.add(textSenha, cc.xy(1, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JLabel label3 = new JLabel();
        label3.setText("Arquivo PDF:");
        panel1.add(label3, cc.xy(1, 9));
        textPDF = new JTextField();
        textPDF.setPreferredSize(new Dimension(300, 30));
        panel1.add(textPDF, cc.xy(1, 11, CellConstraints.FILL, CellConstraints.DEFAULT));
        btnPDF = new JButton();
        btnPDF.setLabel("Procurar");
        btnPDF.setText("Procurar");
        panel1.add(btnPDF, cc.xy(3, 11));
        btnAssinar = new JButton();
        btnAssinar.setInheritsPopupMenu(false);
        btnAssinar.setLabel("Assinar");
        btnAssinar.setText("Assinar");
        panel1.add(btnAssinar, cc.xy(1, 25));
        final JLabel label4 = new JLabel();
        label4.setText("Nome:");
        panel1.add(label4, cc.xy(1, 13));
        textName = new JTextField();
        textName.setPreferredSize(new Dimension(300, 30));
        panel1.add(textName, cc.xy(1, 15, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JLabel label5 = new JLabel();
        label5.setText("Localização:");
        panel1.add(label5, cc.xy(1, 17));
        textLocation = new JTextField();
        textLocation.setPreferredSize(new Dimension(300, 30));
        panel1.add(textLocation, cc.xy(1, 19, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JLabel label6 = new JLabel();
        label6.setText("Razão:");
        panel1.add(label6, cc.xy(1, 21));
        textReason = new JTextField();
        textReason.setPreferredSize(new Dimension(300, 30));
        panel1.add(textReason, cc.xy(1, 23, CellConstraints.FILL, CellConstraints.DEFAULT));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
